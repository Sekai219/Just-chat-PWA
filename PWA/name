<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat</title>

    <!-- PWA相关的meta标签 -->
    <meta id="theme-color-meta" name="theme-color" content="#232323">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <meta name="apple-mobile-web-app-title" content="Chat App">
    <link rel="apple-touch-icon" href="/icons/1.png">
    <link rel="icon" href="/icons/1.png" type="image/png">
    <link rel="manifest" href="/manifest.json">

    <style>
        body, html {
            height: 100%;
            margin: 0;
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: #f4f4f4;
        }

        * {
            -webkit-tap-highlight-color: transparent;
            outline: none;
        }

        #chat-container {
            width: 95%;
            max-width: 800px;
            height: 80%;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            background: white;
            display: flex;
            flex-direction: column;
            position: relative;
        }

        #chat {
            flex: 1;
            padding: 20px;
            overflow-y: auto;
            border-bottom: 1px solid #ccc;
            display: flex;
            flex-direction: column;
        }

        #chat div {
            margin-bottom: 10px;
            padding: 8px;
            border-radius: 5px;
            max-width: 75%;
            word-wrap: break-word;
            cursor: pointer;
            white-space: pre-wrap;
        }

        #chat .sent {
            background: #f1f1f1;
            align-self: flex-end;
        }

        #chat .received {
            background: #f1f1f1;
            align-self: flex-start;
        }

        #message-container {
            display: flex;
            padding: 10px;
            background: #f7f7f7;
            border-top: 1px solid #ccc;
        }

        #message {
            flex: 1;
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        #sendBtn, #pasteBtn {
            padding: 10px 20px;
            margin-left: 10px;
            border: none;
            border-radius: 5px;
            background-color: #28a745;
            color: white;
            cursor: pointer;
        }

        #refreshBtn {
            position: absolute;
            top: 10px;
            right: 10px;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: #f4f4f4;
            border: none;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 16px;
            color: black;
        }

        #count {
            position: absolute;
            top: -10px;
            right: -10px;
            background: red;
            color: white;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            display: none;
            justify-content: center;
            align-items: center;
        }

        @media screen and (max-width: 600px) {
            #chat-container {
                width: 90vw;
            }

            #chat div {
                max-width: 85%;
            }

            #chat-container, #chat, #message-container {
                user-select: none;
            }
        }
    </style>
</head>
<body>
    <div id="chat-container">
        <button id="refreshBtn">⟳
            <span id="count"></span>
        </button>
        <div id="chat"></div>
        <div id="message-container">
            <textarea id="message" rows="2" placeholder="..."></textarea>
            <button id="pasteBtn">粘贴</button>
            <button id="sendBtn">发送</button>
        </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        const chat = document.getElementById('chat');
        const messageInput = document.getElementById('message');
        const sendBtn = document.getElementById('sendBtn');
        const pasteBtn = document.getElementById('pasteBtn');
        const refreshBtn = document.getElementById('refreshBtn');
        const countSpan = document.getElementById('count');
        let copyCount = 0;

        function appendMessage(msg, sender) {
            const div = document.createElement('div');
            div.textContent = msg;
            div.classList.add(sender === socket.id ? 'sent' : 'received');
            div.onclick = () => {
                navigator.clipboard.writeText(msg).then(() => {
                    copyCount++;
                    updateCount();
                }).catch(console.error);
            };
            chat.appendChild(div);
            chat.scrollTop = chat.scrollHeight;

            if (sender !== socket.id) {
                resetCount();
            }
        }

        function updateCount() {
            if (copyCount > 0) {
                countSpan.style.display = 'flex';
                countSpan.textContent = copyCount;
            }
        }

        function resetCount() {
            copyCount = 0;
            countSpan.style.display = 'none';
        }

        socket.on('message', (data) => appendMessage(data.msg, data.sender));

        sendBtn.onclick = () => {
            const message = messageInput.value.trim();
            if (message) {
                socket.emit('message', { msg: message, sender: socket.id });
                messageInput.value = '';
            }
        };

        messageInput.onkeypress = (e) => {
            if (e.key === 'Enter') {
                e.preventDefault();
                sendBtn.click();
            }
        };

        pasteBtn.onclick = async () => {
            const text = await navigator.clipboard.readText();
            if (text.trim()) {
                socket.emit('message', { msg: text, sender: socket.id });
            }
        };

        refreshBtn.onclick = () => location.reload();
    </script>
</body>
</html>
